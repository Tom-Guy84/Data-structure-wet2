#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass heb-article
\begin_preamble
\usepackage{changepage}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language hebrew
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "FrankRuehl"
\font_sans "default" "FrankRuehl"
\font_typewriter "default" "FrankRuehl"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 150
\font_tt_scale 100 150
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing double
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\o}[1]{O\left(#1\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustwidth*}{-3cm}{-3cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ראשית נתאר את מבנה הנתונים בו נשתמש בפתרון התרגיל: מבנה הנתונים 
\begin_inset Formula $PlayerManager$
\end_inset

 אשר יחזיק מבנה 
\begin_inset Formula $Union-Find$
\end_inset

 של קבוצות בגדול 
\begin_inset Formula $k+1$
\end_inset

 כך שהקבוצה באינקס
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
במבנה תהיה קבוצת כל השחקנים, את כמות הקבוצות - k ואת 
\begin_inset Formula $scale$
\end_inset

.
 על קבוצה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
לא נפעיל את פעולת 
\begin_inset Formula $mergeGroups$
\end_inset

 ולכן היא תמיד תהיה נפרדת משאר הקבוצות.
\end_layout

\begin_layout Standard
מחלקות העזר 
\begin_inset Quotes eld
\end_inset

שחקן
\begin_inset Quotes erd
\end_inset

, ו-
\begin_inset Quotes erd
\end_inset

קבוצה
\begin_inset Quotes erd
\end_inset

: עבור כל שחקן ישמרו המספר המזהה שלו, רמתו ,התוצאה שלו ובאיזה קבוצה הוא
 נמצא, ולקבוצה יהיה עץ של כל השחקנים שרמתם אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
 הממויין לפי התוצאה, לאחר מכן הרמה ולבסוף המספר המזהה של השחקן, עץ דרגות
 נוסף של שחקנים שרמתם אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
 ממויין לפי השלב ואז המספר המזהה, טבלת ערבול של כל השחקנים.
\end_layout

\begin_layout Standard
מבנה הנתונים ישתמש במבני הנתונים הבאים:
\end_layout

\begin_layout Enumerate
עץ מסוג דרגות מסוג 
\begin_inset Formula $AVL$
\end_inset

 אשר מומש בתרגיל הראשון )בתוספת דרגות הצמתים - כל צומת ידע מה כמות הצמתים
 בתת העץ החל ממנו(.
 נשתמש לאורך התרגיל בכך שסיבוכיות הזמן של פעולות העץ היא ידועה ולפי מה שנלמד
 בהרצאות ובתרגולים - מציאת איבר
\backslash
מחיקה
\backslash
הכנסה בסיבוכיות של 
\begin_inset Formula $O(log(n))$
\end_inset

 ופעולות סיור על העץ -
\begin_inset Formula $inorder,postorder,preorder$
\end_inset

 יבוצעו כולן ב- 
\begin_inset Formula $O(n)$
\end_inset

 כאשר n היא כמות האיברים בעץ.
 כמו כן, נשתמש בפעולת 
\begin_inset Formula $combineTrees$
\end_inset

 אשר מומשה בתרגיל הקודם לצורך איחוד שני עצים )חלק מפונקציית 
\begin_inset Formula $ReaplceGroups$
\end_inset

( וסיבוכיות הזמן שלה היא 
\begin_inset Formula $O(n_{1}+n_{2})$
\end_inset

 כאשר זו כמות האיברים הכוללת בשני העצים.
 כמו כן, הראנו בתרגולים ובהרצאות כי ה
\begin_inset Quotes erd
\end_inset

שדרוג
\begin_inset Quotes erd
\end_inset

 של העץ להיות עץ דרגות אינו משנה את סיבוכיות הזמן והמקום של פעולות העץ.
 מכיוון שהיעוד היחיד של העץ בתרגיל הוא לאחסון המשתתפים , לכל צומת בעץ תהיה
 שמורה הרמה הממוצעת בתת העץ שצומת זו היא השורש שלו.
 עדכון שדה זה קורה ע
\begin_inset Quotes erd
\end_inset

י חישוב פשוט בדומה לדרגה או גובה צומת ולכן אינו משפיע על שיקולי סיבוכיות.
 סיבוכיות המקום של העץ היא 
\begin_inset Formula $O(n)$
\end_inset

 כאשר n היא כמות האיברים בו.
\end_layout

\begin_layout Enumerate
טבלת ערבול - 
\begin_inset Formula $Hash-Table$
\end_inset

 בעלת פקטור עומס של
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
1
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
הממומשת ע
\begin_inset Quotes erd
\end_inset

י 
\begin_inset Quotes eld
\end_inset

ערבול כפול
\begin_inset Quotes erd
\end_inset

 - במידה ואיבר יותאם לתא כלשהו במערך אך התא תפוס, נבצע איטרציה נוספת ונמצא
 לאיבר תא נוסף אליו הוא יותאם.
 הטבלה ממומשת כפי שנלמד בהרצאה כך שבכל תא יהיה איבר יחיד ובכך סיבוכיות הזמן
 הממוצעת על הקלט להכנסה
\backslash
מציאה
\backslash
מחיקה של איבר היא 
\begin_inset Formula $O(1)$
\end_inset

.
 כאשר הטבלה מלאה, נגדיל אותה פי
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
2
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
בקירוב, למספר הראשוני הראשון שקרוב לגודל הבטלה הנוכחי כפול
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
2
\numeric off
.
 המטרה בכך היא לשמור על פונקציית הערבול ועל פקטור העמוס לפי הדרישות.
 לאחר מספר גדול של מחיקות ביחס לטבלה, נקצה טבלה חדשה ונוותר על הישנה ובה
 דגלים שאינם רלוונטיים יותר לחיפוש איבר בתאים ריקים.
 סיבוכיות המקום של הטבלה היא 
\begin_inset Formula $O(n)$
\end_inset

 כאשר n זו כמות האיברים בה.
 
\end_layout

\begin_layout Enumerate
מבנה 
\begin_inset Formula $Union-Find$
\end_inset

 שיאותחל לגודל 
\begin_inset Formula $k+1$
\end_inset

 וישאר קבוע למשך כל ריצת התוכנית.
 המבנה ימומש כפי שנלמד בהרצאה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
8
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
שקופיות 
\numeric on
17-21
\numeric off
, וישתמש בעצים הפוכים, באיחוד לפי גודל ובכיווץ מסלולים על מנת לפעול בסיבוכיות
 משוערכת של 
\begin_inset Formula $log^{*}(k)$
\end_inset

 כאשר k היא כמות האיברים בו.
 סיבוכיות המקום של המבנה היא 
\begin_inset Formula $O(k)$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
כעת נתאר את מימוש כל אחת מהפעולות וננתח את סיבוכיות הזמן שלה.
\begin_inset Newline newline
\end_inset

את חישוב סיבוכיות הזמן המשוערכת הנוגעת לחלק שנובע ממספר הקבוצות - 
\begin_inset Formula $k$
\end_inset

, של הפעולות:
\begin_inset Formula 
\[
\begin{array}{c}
averageHighestPlayerLevelByGroup,\,mergeGroups,\,increasePlayerIDLevel,\,changePlayerIDScore,\\
getPercentOfPlayersWithScoreInBounds,\,removePlayer,\,addPlayer,\,getPlayersBound
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
כמו גם את חישוב הסיבוכיות המשוערכת הנוגעת לחלק של מספר השחקנים - 
\begin_inset Formula $n$
\end_inset

, של הפעולות: 
\begin_inset Formula 
\[
\begin{array}{c}
removePlayer,\,increasePlayerLevel,\,changePlayerIDScore\\
addPlayer
\end{array}
\]

\end_inset

נחשב בסוף במרוכז לאחר שנתאר כל אחת בנפרד.
\end_layout

\end_deeper
\begin_layout Standard

\series bold
תיאור הפעולות:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{void*init(int}\boldsymbol{k,int}\boldsymbol{sclae)}$
\end_inset


\series bold
:
\series default
 הפעולה תאתחל 
\begin_inset Formula $PlayerManager$
\end_inset

 חדש ומבנה תאתחל את מבנה ה- 
\begin_inset Formula $Union-Find$
\end_inset

 בגדול 
\begin_inset Formula $k+1$
\end_inset

 ל-
\begin_inset Formula $k+1$
\end_inset

 הקבוצות.
 סיבוכיות הזמן של הפעולה זו היא 
\begin_inset Formula $O(k+1)=\o k$
\end_inset

 כי הפעולה יוצרת את כל הקבוצות ויצירת כל קבוצה היא ב- 
\begin_inset Formula $O(1)$
\end_inset

.
 הפעולה תחזיר את מנהל השחקנים החדש, בהנחה והקלט היה תקין וכי לא הייתה בעיה
 בהקצאת זיכרון.
 סיבוכיות הזמן הכוללת של היא 
\begin_inset Formula $\o k$
\end_inset

כנדרש.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\boldsymbol{GroupID2)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{GroupID1,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{mergeGroups(void*}$
\end_inset

 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset

: 
\series default
הפעולה תמצא ותאחד את שתי הקבוצות במבנה ה-
\begin_inset Formula $Union-Find$
\end_inset

 בסיבוכיות משוערכת של 
\begin_inset Formula $O(log^{*}k)$
\end_inset

 כפי שהוסבר בהרצאה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
8
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
והצג למעלה, תאחד את עצי השחקנים של שתי הקבוצות בסיבוכיות 
\begin_inset Formula $O(n)$
\end_inset

 כאשר n זוהי כמות השחקנים בשתי הקבוצות ביחד על ידי שימוש במתודה 
\begin_inset Formula $combineTrees$
\end_inset

 שמוגדרת על העץ )תוך שהיא מעדכנת את דרגות העץ באופן רלוונטי(, ותאחד את טבלאות
 השחקנים לכדי טבלה אחת, פעולה שממומשת על ידי המבנה 
\begin_inset Formula $Hash-Table$
\end_inset

 ומבוצעת ב-
\begin_inset Formula $O(n)$
\end_inset

 בממוצע.
 יש לשים לב בעת התייחסות לקבוצה שכבר אוחדה בעבר עם קבוצה אחרת, שחקני הקבוצה
 הם שחקני הקבוצות המאוחודת ואיחודה עם קבוצה נוספת יהיה איחוד של הקבוצה הנוספת
 אל הקבוצות שכבר אוחדו.
 כמו כן, פעולות מבנה ה-
\begin_inset Formula $Union-Find$
\end_inset

 אינן תלויות בכמה שחקנים יש לכל קבוצה, אלא כמה קבוצות אוחדו ביחד לכדי קבוצה
 אחת.
 אין דבר זה משפיע על סיבוכיות פעולות העצים וזה נועד על מנת לממש את המבנה
 בצורה היעילה ביותר.
 במידה ושתי הקבוצות אותן רוצים לאחד כבר אוחדו בעבר הפעולה לא תעשה דבר.
 במידה והקלט לא יהיה תקין או תהיה שגיאת זיכרון תוחזר שגיאה מתאימה.
 בסה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות הזמן של הפעולה היא 
\begin_inset Formula $O(log^{*}k+n)$
\end_inset

 כנדרש.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{score)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{GroupID,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{PlayerID,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{addPlayer(void*}$
\end_inset

 
\series bold

\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset

:
\series default
 הפעולה תיצור שחקן חדש, תכניס אותו בקבוצת כל השחקנים לטבלת כל השחקנים בקבוצה
 ב- 
\begin_inset Formula $O(1)$
\end_inset

 בממוצע על הקלט, תמצא את קבוצות השחקן בסיבוכיות של 
\begin_inset Formula $O(log^{*}k)$
\end_inset

 במשוערך ותכניס אותו לטבלת שחקני הקבוצה, גם כן ב-
\begin_inset Formula $O(1)$
\end_inset

 בממוצע על הקלט.
 במידה והקלט לא יהיה תקין, השחקן כבר קיים או תהיה שגיאת זיכרון תוחזר שגיאה
 מתאימה.סה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות הזמן המשוערכת בממוצע על הקלט של הפעולה היא 
\begin_inset Formula $O(log^{*}k)$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{PlayerID)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{removePlayer(void*}$
\end_inset

 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset


\series bold
: 
\series default
הפעולה תמצא את השחקן בקבוצת כל השחקנים )בטבלת הערבול בקבוצה, סיבוכיות משוערת
 
\begin_inset Formula $O(1)$
\end_inset

 בממוצע(, משם תמצא את קבוצתו דרך השדה השמור אצלו, תמצא את קבוצתו במבנה ה-
\begin_inset Formula $Union-Find$
\end_inset

 של הקבוצות )סיבוכיות משוערכת 
\begin_inset Formula $O(log^{*}k)$
\end_inset

( ותסיר אותו מטבלת השחקנים בקבוצה )בסיבוכיות 
\begin_inset Formula $O(1)$
\end_inset

 בממוצע( ומעצי השחקנים במידה ורמתו אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
)היא תחפש אותו לפי התוצאה שלו ולפי רמתו בשני העצים השונים, בסדר בו יכנסו
 שחקנים לעץ ותוך כדי ההוצאה תעדכן את דרגות הצמתים, סיבוכיות הזמן היא 
\begin_inset Formula $O(log(n))$
\end_inset

 כאשר יש n איברים בעץ(.
 לבסוף הפעולה תסיר אותו מקבוצת כל השחקנים באותו האופן.
 במידה והקלט לא יהיה תקין, השחקן לא קיים או תהיה שגיאת זיכרון תוחזר שגיאה
 מתאימה.
 בסה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות הזמן של הפעולה היא 
\begin_inset Formula $O(log^{*}k+log(n))$
\end_inset

 כנדרש.
\end_layout

\begin_layout Enumerate

\series bold
\begin_inset Formula $\boldsymbol{LevelIncrease)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{PlayerID,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{increasePlayerIDLevel(void*}$
\end_inset


\series default
 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset


\series bold
: 
\series default
הפעולה תמצא את השחקן בקבוצת כל השחקנים )בטבלת הערבול בקבוצה, בסיבוכיות 
\begin_inset Formula $O(1)$
\end_inset

 בממוצע(, במידה ורמת השחקן היא
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, תעדכן את רמתו ותכניס אותו לעצי השחקנים שרמתם אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, במידה והיא אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, תעדכן אותו, תמצא אותו בעצים, תסיר אותו, תעדכן את רמתו ואז תכניס אותו מחדש
 )בכך לא תיפגע בתקינות סדר האיברים בעץ ובדרגות הצמתים(.
 לאחר מכן היא תמצא את קבוצתו דרך השדה השמור אצל השחקן ותבצע את פעולה זו
 שוב באותו האופן רק בקבוצת השחקן ולא בקבוצת כל השחקנים.
 במידה והקלט לא יהיה תקין, השחקן אינו קיים במערכת או תהיה שגיאת זיכרון תוחזר
 שגיאה מתאימה.
 הסיבוכיות הכוללת של הפעולה נקבעת לפי מציאתו ועדכנו בטבלאות, בעצים ומציאת
 קבצתו במבנה הקבוצת ולכן היא בהס
\begin_inset Quotes erd
\end_inset

כ תהיה 
\begin_inset Formula $\o{log^{*}k+log(n)}$
\end_inset

כנדרש.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{NewScore)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{PlayerID,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,int}$
\end_inset

 
\begin_inset Formula $\boldsymbol{changePlayerIDScore(void*}$
\end_inset

 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset


\series bold
: 
\series default
הפעולה תמצא את השחקן בקבוצת כל השחקנים )בטבלת הערבול בקבוצה, בסיבוכיות 
\begin_inset Formula $O(1)$
\end_inset

 בממוצע(, תעדכן את התוצאה שלו, במידה ורמת השחקן אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, תמצא אותו בעץ הרלוונטי, תסיר אותו, תעדכן את התוצאה שלו ואז תכניס אותו
 מחדש )בכך לא תיפגע בתקינות סדר האיברים בעץ(.
 לאחר מכן היא תמצא את קבוצתו דרך השדה השמור אצל השחקן ותבצע את פעולה זו
 שוב באותו האופן רק בקבוצת השחקן ולא בקבוצת כל השחקנים.
 במידה והקלט לא יהיה תקין, השחקן אינו קיים במערכת או תהיה שגיאת זיכרון תוחזר
 שגיאה מתאימה.
 הסיבוכיות הכוללת של הפעולה נקבעת לפי מציאתו בטבלאות, בעצים, מציאת קבצתו
 במבנה הקבוצת ועדכון התאים במערך ולכן היא בהס
\begin_inset Quotes erd
\end_inset

כ תהיה 
\begin_inset Formula $\o{log^{*}k+log(n)}$
\end_inset

כנדרש.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{\,higherLevel,\,players)}$
\end_inset


\begin_inset Formula $\boldsymbol{getPercentOfPlayersWithScoreInBounds(DS,\,GroupId,\,score,\,lowerLevel}$
\end_inset


\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset

:
\series default
 הפעולה תעבור על העץ הממויין תחילה לפי תוצאה, תמצא כמה שחקנים יש בתוצאה
 המבוקשת כאשר רמתם היא בין שני החסמים )תעשה זאת בכך שתחפש את השחקן שתוצאתו
 היא המבוקשת ורמתו הכי קרובה מלמעלה לחסם התחתון, ואת השחקן שתוצאתו היא המבוקשת
 ורמתו הכי קרובה מלמטה לחסם העליון( כאשר את כמות השחקנים היא תחשב לפי דרגות
 הצמתים, תעשה אותה הפעולה בעץ הממויין רק לפי הרמה והמספר המזהה בו תקבל את
 כמות השחקנים הכוללת של השחקנים בין רמות אלה ותחזיר את היחס בין שתי הקבוצות.
 במידה והקלט לא יהיה תקין, אין שחקנים בקבוצה בין רמות אלו או תהיה שגיאת
 זיכרון תוחזר שגיאה מתאימה.
 הפעולה תפעל על הקבוצה המבוקשת או קבוצת כל השחקנים - קבוצה מספר
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, לפי הקלט.
 סיבוכיות הזמן הכוללת מתבטאת בחיפוש הקבוצה הרלוונטית ובה חיפוש של ארבעה
 איברים שונים בעצים כאשר מציאת כל אחד מהם היא ב-
\begin_inset Formula $\o{log(n)}$
\end_inset

 וחישוב אמפירי ולכן בסה
\begin_inset Quotes erd
\end_inset

כ תהיה 
\begin_inset Formula $\o{log^{*}k+log(n)}$
\end_inset

 כנדרש.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{avgLevel)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{m,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{GroupID,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{averageHighestPlayerLevelByGroup(}$
\end_inset

 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset


\series bold
: 
\series default
פעולה זו תשתמש בשדה נוסף מסוג 
\begin_inset Formula $double$
\end_inset

 שיהיה שמור בכל צומת בעץ.
 הפעולה תרוץ על השחקנים הממויין לפי רמתם, כאשר תתחיל מהשורש ותחפש בתת העץ
 הימני כל פעם את הצומת בה כמות הצמתים )השחקנים( בתת העץ הנוכחי היא בדיוק
 הכמות של השחקנים הטובים ביותר )שרמתם הגבוהה ביותר( להם נרצה לחשב את הממוצע.
 השדה הנוסף של הצומת יחזיק את ממוצע השחקנים שנמצאים בתת העץ כאשר צומת זו
 היא השורש.
 במידה לא קיימת צומת המחזיקה את המספר המדויק של השחקנים אותו נרצה לחשב,
 נמצא את אבא שלה )בהנחה שהצומת אינה השורש כי אז הדרישה היא על כמות שחקנים
 הגודלה מזו שבעץ, במקרה זה נשתמש גם בשחקנים שרמתם
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
ובמידה וגם אז לא יהיו מספיק שחקנים בקבוצה תוחזר שגיאה(.
 ממנו, נרד לבן הימני, נחשב את סכום הדרגות הכולל שם )ע
\begin_inset Quotes erd
\end_inset

י הכפלת הדרגה הממוצעת השמורה בו כפול גודל תת העץ שהשורש שלו הוא הבן הימני(
 ונספור כמה שחקנים עברנו - כאלה שהיו בתת העץ הימני, אחר כך נלך לתת העץ השמאלי
 שלו ונתחיל את החיפוש מההתחלה כאשר השורש הוא הצומת בה אנו נמצאים כרגע )הבן
 השמאלי של האבא( וכומת השחקנים היא הכמות שחיפשנו בהתחלה פחות כמה שהיו בתת
 העץ הימני.
 
\series bold
לדוגמה
\series default
,
\series bold
 
\series default
נניח ונחפש מה ממוצע הרמות של 
\numeric on
9
\numeric off
 השחקנים ברמה הגבוהה ביותר.
 בעצם נחפש את הצומת האינדקס הוא 
\numeric on
9
\numeric off
 ונחזיר את הערך שם.
 תמיד מתחילים מלמעלה והולכים ימינה לכן נניח ונעצרנו בצומת שגודל תת העץ בה
 הוא 
\numeric on
11
\numeric off
, ובבן הימני שלו יש 
\numeric on
6
\numeric off
.
 אז נלך לבן הימני, נקח את הממוצע שיש בו, נכפיל ב-
\numeric on
6
\numeric off
, נחזור לאבא, נלך ממנו שמאלה ואז ימינה עד הסוף ונחפש צומת עם 
\numeric on
3
\numeric off
.
 אם אין, וקיימת נגיד צומת עם 
\numeric on
5
\numeric off
 ומימינה יש רק 
\numeric on
2
\numeric off
, נחזור על התהליך.
\begin_inset Newline newline
\end_inset

עדכון העץ יבוצע בכל פעם שנעלה את רמתו של שחקן והכנסה ראשונית מבוצעת בפעם
 הראשונה שמעלים את רמתו מ-
\numeric on
0
\numeric off
.
 בעץ השחקנים ימוינו לפי הרמה.
 במידה והקלט לא יהיה תקין, יש בקבוצה פחות שחקנים מאשר הכמות לה אנו מתבקשים
 לחשב ממוצע או תהיה שגיאת זיכרון תוחזר שגיאה מתאימה.
 הפעולה תפעל על הקבוצה המבוקשת או קבוצת כל השחקנים - קבוצה מספר
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
, לפי הקלט.
 סה
\begin_inset Quotes erd
\end_inset

כ, סיבכיות הזמן של הפעולה היא מציאת הקבוצה הרלוונטית, ופעולת הסריקה של העץ
 המבוצעת בסיבוכיות זמן של 
\begin_inset Formula $\o{log(n)}$
\end_inset

 כאשר n זו כמות האיברים בעץ, ולכן בסה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות הזמן של הפעולה היא 
\begin_inset Formula $\o{log^{*}k+log(n)}$
\end_inset

כנדרש.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{HihgerBoundPlayers)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{LowerBoundPlayers,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{m,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{score,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{GroupID,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{DS,}$
\end_inset

 
\begin_inset Formula $\boldsymbol{getPlayersBound(}$
\end_inset

 
\begin_inset Formula $\boldsymbol{StatusType}$
\end_inset

: 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\boldsymbol{Quit(void**DS)}$
\end_inset

 
\begin_inset Formula $\boldsymbol{void}$
\end_inset


\series bold
:
\series default
 הפעולה תקרא להורס הדיפולטיבי של 
\begin_inset Formula $PlayerManager$
\end_inset

 שבתורו יקרא להורסים הדיפולטיביים של כל שאר המבנים במימוש, כאשר כל אחד מהם
 מוחק את הזיכרון שמוחזק בו.
 בגלל שסיבוכיות הזיכרון במבנה היא 
\begin_inset Formula $\o{n+k}$
\end_inset

)נסביר בהמשך( פעולה זו תפעל בסיבוכיות זו כנדרש.
\end_layout

\begin_layout Standard
חישוב הסיבוכיות המשוערכת:
\end_layout

\begin_layout Enumerate
חישוב סיבוכיות הזמן המשוערכת הנוגעת לחלק שנובע ממספר הקבוצות - 
\begin_inset Formula $k$
\end_inset

, של הפעולות:
\begin_inset Formula 
\[
\begin{array}{c}
averageHighestPlayerLevelByGroup,\,mergeGroups,\,increasePlayerIDLevel,\,changePlayerIDScore,\\
getPercentOfPlayersWithScoreInBounds,\,removePlayer,\,addPlayer,\,getPlayersBound
\end{array}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
בפעולות אלה, סיבוכיות הזמן היא כפי שהוצגה מעלה ועומדת בדרישות מכיוון שאנו
 נסמכים על כך )והמימוש תומך בכך( שפעולת 
\begin_inset Formula $find$
\end_inset

 במבנה 
\begin_inset Formula $Union-Find$
\end_inset

 היא בסיבוכיות משוערכת של 
\begin_inset Formula $\o{log^{*}k}$
\end_inset

.
 במימוש שלנו, בניגוד למה שרואים בהרצאות או בתרגול, במקום לשלוח לפעולת 
\begin_inset Formula $Union$
\end_inset

 שתי קבוצות לאחר שהשתמשנו פעמיים בפעולת 
\begin_inset Formula $find$
\end_inset

, הפעולה עצמה קוראת ל-
\begin_inset Formula $find$
\end_inset

.
 לכן כדי לעמוד בדרישות הסיבוכיות האלו, עלינו לדאוג לכך שהמבנה באמת ישתמש
 בעצים הפוכים, יאחד לפי גודל )כן מבוצע בפעולת ה-
\begin_inset Formula $Union$
\end_inset

( ויכווץ מסלולים )אשר מתבצע בפעולת ה-
\begin_inset Formula $find$
\end_inset

(.
 לכן בסה
\begin_inset Quotes erd
\end_inset

כ, הסיבוכיות המשוערכת היא אכן 
\begin_inset Formula $\o{t*log^{*}k+t*f(n)}$
\end_inset

 כאשר 
\begin_inset Formula $f(n)$
\end_inset

 תלויה בכמות השחקנים בלבד, כנדרש.
\end_layout

\end_deeper
\begin_layout Enumerate
כמו גם את חישוב הסיבוכיות המשוערכת הנוגעת לחלק של מספר השחקנים - 
\begin_inset Formula $n$
\end_inset

, של הפעולות: 
\begin_inset Formula 
\[
\begin{array}{c}
removePlayer,\,increasePlayerLevel,\,changePlayerIDScore\\
addPlayer
\end{array}
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
בפעולות אלה, סיבוכיות הזמן המתייחסת לחלק של השחקנים תלויה בשני דברים:
\end_layout

\begin_layout Enumerate
פעולות על העצים )מציאה, הכנסה והסרה( אשר מתבצעות בסיבוכיות של 
\begin_inset Formula $\o{log(n)}$
\end_inset

במקרה הגרוע ולכן גם במשוערך.
\end_layout

\begin_layout Enumerate
מציאת שחקנים
\backslash
הסרתם מטבלת הערבול.
 ראינו בהרצאות שהסיבוכיות הממוצעת לפעולות הכנסה, הוצאה ומציאה היא ב-
\begin_inset Formula $\o 1$
\end_inset

ושהסיבוכיות המשוערכת היא על כן ב-
\begin_inset Formula $O(1)$
\end_inset

 גם כן.
 
\end_layout

\begin_layout Standard
לכן בסה
\begin_inset Quotes erd
\end_inset

כ, הסיבוכיות של פעולות אלה תהיה 
\begin_inset Formula $\o{f(k)+t_{1}*log(n)+t_{2}}$
\end_inset

כאשר 
\begin_inset Formula $f(k)$
\end_inset

 תלוי רק במספר הקבוצות, 
\begin_inset Formula $t_{1}$
\end_inset

 זו כמות הפעולות הכוללת של רצף הפעולות 
\begin_inset Formula $removePlayer,\,increasePlayerLevel,\,changePlayerIDScore$
\end_inset

 כי הן אלה הפועלות על העץ ו-
\begin_inset Formula $addPlayer$
\end_inset

 אינה פועלת על העץ ומבצועת 
\begin_inset Formula $t_{2}$
\end_inset

 פעמים.
\end_layout

\end_deeper
\begin_layout Standard
סיבוכיות המקום הכוללת של מבנה הנתונים מתבטאת בדברים הבאים:
\end_layout

\begin_layout Enumerate
החזקת מבנה ה-
\begin_inset Formula $Union-Find$
\end_inset

 בגדול 
\begin_inset Formula $k+1$
\end_inset

 של קבוצות.
 סיבוכיות המקום של מבנה זה היא 
\begin_inset Formula $\o{k+1}=\o k$
\end_inset

כאשר אאת סיבוכיות המקום הנוספת לכל קבוצה נסכום בנפרד.
\end_layout

\begin_layout Enumerate
כל קבוצה מחזיקה שני עצים של שחקנים שרמתם אינה
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\numeric off
 וטבלת ערבול ובה כל השחקנים.
 לכן, סיבכויות המקום של כמות השחקנים בכל קבוצה חסומה מלמעלה ע
\begin_inset Quotes erd
\end_inset

י
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset Formula $3n$
\end_inset

 כאשר n זוהי כמות השחקנים בקבוצה )כפול כמות המקום הקבועה הנשמרת עבור כל
 שחקן(.
 בסה
\begin_inset Quotes erd
\end_inset

כ, מכיוון שבכל k הקבוצות יחד יש אותה כמות שחקנים כמו בקבוצה מספר 
\family default
\series default
\shape default
\size default
\emph default
\numeric on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
0
\family roman
\series medium
\shape up
\size normal
\emph off
\numeric off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
- קבוצת כל החשקנים, סה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות המקום עבור השחקנים חסומה ע
\begin_inset Quotes erd
\end_inset

י 
\begin_inset Formula $\o{6n}=\o n$
\end_inset

.
 רק נזכיר כי סיבוכיות המקום הכוללת של העצים וטבלת העירבול היא 
\begin_inset Formula $\o n$
\end_inset

כאשר n זוהי כמות האיברים במבנה.
\end_layout

\begin_layout Standard
לכן בסה
\begin_inset Quotes erd
\end_inset

כ, סיבוכיות המקום הכוללת של מבנה הנתונים היא 
\begin_inset Formula $O(k+n)$
\end_inset

 כנדרש.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustwidth*}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
